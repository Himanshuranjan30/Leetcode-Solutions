class Solution {
public:
    int numRookCaptures(vector<vector<char>>& board) {
        int fi;
        int fj;
        int i;
        int j;
        int count=0;
        for(i=0;i<board.size();i++)
        {
            for(j=0;j<board[i].size();j++)
            {
                if(board[i][j]=='R')
                {
                       fi=i;
                       fj=j;
                       while(fj<board[fi].size())
                      {
                          if(board[fi][fj]=='B')
                              break;
                          else if(board[fi][fj]=='p')
                          { count++;
                            break;
                          }
                           
                           fj++;
                      }
                      
                     fj=j;
                      while(fj>=0)
                      {
                           if(board[fi][fj]=='B')
                           { 
                               break;}
                          else if(board[fi][fj]=='p')
                          { count++;
                           break;
                          }
                           
                           fj--;
                      }
                     fi=i;
                     fj=j;
                    while(fi>=0)
                    {
                        if(board[fi][fj]=='B')
                        {
                            
                            break;
                        }
                        else if(board[fi][fj]=='p')
                        {count++;
                         break;
                        }
                        fi--;
                    }
                    fi=i;
                    fj=j;
                     while(fi<board.size())
                    {
                        if(board[fi][fj]=='B')
                        {
                            
                            break;
                        }
                        else if(board[fi][fj]=='p')
                        { count++;
                          break;
                        }
                        fi++;
                    }
                    
                      
                }  
            }
        }
        return count;
    }
};
